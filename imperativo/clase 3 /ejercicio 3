3.- Implementar un programa que invoque a los siguientes módulos.
a. Un módulo recursivo que retorne un vector de 20 números enteros “random” mayores a 300
y menores a 1550 (incluidos ambos).
b. Un módulo que reciba el vector generado en a) y lo retorne ordenado. (Utilizar lo realizado
en la práctica anterior)
c. Un módulo que realice una búsqueda dicotómica en el vector, utilizando el siguiente
encabezado:
Procedure busquedaDicotomica (v: vector; ini,fin: indice; dato:integer; var pos: indice);
Nota: El parámetro “pos” debe retornar la posición del dato o -1 si el dato no se encuentra
en el vector.


program ejercicio_3;
const 
  dimf = 20;
  min = 300;
  max = 1550;
type 
  rango = 1..dimf;
  vector = array [rango] of integer;
procedure cargarvector(var v: vector; diml: integer);
  var 
    num: integer;
  begin 
    num := min + random(max - min + 1);
    if(diml < dimf)then begin
      v[diml]:= num;
      cargarvector(v, diml+1);
    end
    else begin 
      v[diml]:= num;
    end;
  end;	
procedure seleccion (var v:vector);
  var 
    i,j,pos :integer;
    actual: integer;
  begin 
    for i:= 1 to dimf-1 do begin 
      j:= i - 1;
      pos := i;
      for j := i+1 to dimf do begin 
        if(v[j] < v[pos])then begin 
          pos := j;
        end;
      end;
      actual:= v[pos];
      v[pos]:= v[i];
      v[i]:= actual;
    end;
  end;
Procedure busquedaDicotomica (v: vector; ini,fin: rango; dato:integer; var pos: integer);
  var
    medio: integer;
  begin 
    while (ini <> fin)do begin 
      medio := (ini + fin) div 2;
      if(medio <> ini) and (medio <> fin)then begin 
        if(v[medio] < dato)then begin 
        ini:= medio;
        end
        else begin 
          if(v[medio] > dato)then begin 
            fin:= medio; 
          end
          else begin 
            ini := fin;
          end;
        end;
      end
      else begin 
        ini := fin;
      end;
    end;
    if(v[medio] = dato)then begin 
      pos := medio;
    end
    else begin 
      pos := -1; 
    end;
  end;
procedure mostrarvalores(v:vector);
  var 
    i: rango;
  begin 
    for i := 1 to dimf do begin 
      writeln(v[i]);
    end;
  end;
var 
  v: vector;
  diml: integer;
  ini,fin: rango;
  dato: integer;
  pos: integer;
begin 
  diml:= 1;
  ini := diml;
  cargarvector(v,diml);
  fin := dimf;
  writeln('ya esta cargado el vector');
  seleccion(v);
  writeln('ya esta ordenado el vector de menor a moyor ');
  mostrarvalores(v);
  writeln('ingrese le valor que quiere buscar en el vector ');
  readln(dato);
  busquedaDicotomica(v,ini,fin,dato,pos);
  if(pos <> -1)then begin 
    writeln('el valor ',v[pos],' se encuentra en la posicion ',pos );
  end
  else begin 
    writeln('el valor ingresado no se a encontrado en el vector');
  end;
end.
