3.- Netflix ha publicado la lista de películas que estarán disponibles durante el mes de
diciembre de 2022. De cada película se conoce: código de película, código de género (1: acción,
2: aventura, 3: drama, 4: suspenso, 5: comedia, 6: bélico, 7: documental y 8: terror) y puntaje
promedio otorgado por las críticas.
Implementar un programa que invoque a módulos para cada uno de los siguientes puntos:
a. Lea los datos de películas, los almacene por orden de llegada y agrupados por código de
género, y retorne en una estructura de datos adecuada. La lectura finaliza cuando se lee el
código de la película -1.
b. Genere y retorne en un vector, para cada género, el código de película con mayor puntaje
obtenido entre todas las críticas, a partir de la estructura generada en a)..
c. Ordene los elementos del vector generado en b) por puntaje utilizando alguno de los dos
métodos vistos en la teoría.
d. Muestre el código de película con mayor puntaje y el código de película con menor puntaje,
del vector obtenido en el punto c).

program ejercicio_3;
type
  rango = 1..8;
  peliculas = record 
    cod_pelicula: integer;
    cod_genero: rango;
    puntaje_criticas: real;
  end;
  lista = ^nodo;
    nodo = record
      dato : peliculas;
      sig: lista;
      ult: lista;
    end;
  peli = record 
    cod_peli: integer;
    puntaje : real;
  end;
  vector = array [rango] of lista;
  mayor_puntaje = array [rango] of peli;
procedure cargardatos(var p:peliculas);
  begin 
    writeln('ingrese el codigo de pelicula');
    readln(p.cod_pelicula);
    if (p.cod_pelicula <> -1)then begin 
      writeln('ingrese el genero de pelicula');
      readln(p.cod_genero);
      writeln('ingrese el puntaje promedio otortgado por las criticas');
      readln(p.puntaje_criticas);
    end;
  end;
procedure agregaratras(var l: lista; p:peliculas );
  var 
    aux:lista;
  begin 
    new(aux);
    aux^.dato := p;
    aux^.sig := nil;
    if(l = nil)then begin 
      l := aux;
    end
    else begin 
      l^.ult := aux;
    end;
    l^.ult := aux; 
  end;
procedure cargarvector(var v:vector );
  var 
    p:peliculas;
  begin 
    cargardatos(p);
    while (p.cod_pelicula <> -1)do begin 
      agregaratras(v[p.cod_genero],p);
      cargardatos(p);
    end;
  end;
procedure inicializarvector(var mp:mayor_puntaje);
  var 
    i : rango;
  begin 
    for i := 1 to 8 do begin 
      mp[i].puntaje:= 0;
    end;
  end;
procedure mayor(l:lista ;var codigo:integer;var puntaje_mayor:real);
  var 
    mayor: real;
    codi:integer;
  begin 
    mayor:=0;
    while (l <> nil)do begin 
      if(l^.dato.puntaje_criticas > mayor)then begin 
        codi:= l^.dato.cod_pelicula;
        mayor:= l^.dato.puntaje_criticas;
      end;
      l:=l^.sig;
    end;
    codigo:= codi;
    puntaje_mayor:= mayor;
  end;
procedure recorrervector (v:vector; var mp:mayor_puntaje );
  var 
    i:integer;
  begin 
    for i := 1 to 8 do begin 
      mayor(v[i],mp[i].cod_peli,mp[i].puntaje);
    end;
  end;
procedure insercion (var mp:mayor_puntaje);
  var 
    i,j: integer;
    actual: peli;
  begin
    for i := 2 to 8 do begin 
      actual := mp[i];
      j:= i - 1;
      while(j > 0) and (mp[j].puntaje < actual.puntaje) do begin 
         mp[j+1] := mp[j];
         j :=j -1;
      end;
      mp[j+1]:= actual;
    end; 
  end;
procedure mayor_y_menor (mp:mayor_puntaje);
  begin 
    writeln('el codigo de pelicula con mas puntaje es: ',mp[1].cod_peli,' con un puntaje de ',mp[1].puntaje );
    writeln('el codigo de pelicula con menor puntaje es: ',mp[8].cod_peli,' con un puntaje de ',mp[8].puntaje );
  end;
var 
  v:vector;
  mp:mayor_puntaje;
begin 
  inicializarvector(mp);
  cargarvector(v);
  recorrervector(v,mp);
  insercion(mp);
  mayor_y_menor(mp);
end.
